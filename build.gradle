// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    apply from: 'versions.gradle'
    addRepos(repositories)

    dependencies {
        classpath deps.android_gradle_plugin
        classpath deps.kotlin.kotlin_gradle_plugin
        classpath deps.google_services
        classpath deps.crashlytics_gradle
        classpath deps.jacoco_android
    }
    repositories {
        google()
    }
}

plugins {
    id "org.sonarqube" version "2.7.1"
}

sonarqube {
    properties {
        property 'sonar.organization', "garyfimo"
        property 'sonar.projectKey', "Garyfimo_UnitTestExample"
        property "sonar.language", "kotlin"
        property "sonar.sourceEncoding", "UTF-8"
        property 'sonar.host.url', "https://sonarcloud.io"
        property 'sonar.coverage.jacoco.xmlReportPaths', "**/build/reports/jacoco/debug/jacoco.xml"
        property 'sonar.coverage.exclusions', "**/model/**"

        property "sonar.sources", "src/main/java"
        property "sonar.binaries", "build/intermediates/classes/debug"
        property "sonar.java.binaries", "build/intermediates/classes/debug"
        property "sonar.tests", "src/test/java, src/androidTest/java"
        property "sonar.java.test.binaries", "build/intermediates/classes/debug"

        def unit = fileTree(dir: project.projectDir, includes: ['**/*.exec']).files;
        def ui = fileTree(dir: project.projectDir, includes: ['**/*.ec']).files;
        unit.addAll(ui);
        def files = unit.join(", ");

        property "sonar.jacoco.reportPaths", files
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPath", "build/test-results/testDebugUnitTest"
        property "sonar.android.lint.report", "build/reports/lint-results.xml"
    }
}

allprojects {
    addRepos(repositories)
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

repositories {
    google()
}