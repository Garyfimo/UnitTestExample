apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: "com.vanniktech.android.junit.jacoco"

android {
    compileSdkVersion build_versions.target_sdk

    defaultConfig {
        applicationId "com.garyfimo.unittestexample"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
            minifyEnabled false

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    packagingOptions {
        exclude "META-INF/LICENSE*"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests.returnDefaultValues = true
    }

    // Gradle automatically adds 'android.test.runner' as a dependency.
    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    testOptions.unitTests.all {
        useJUnitPlatform()

        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    implementation deps.android.appcompat
    implementation deps.android.constraint_layout
    implementation deps.android.lifecycle_extensions
    implementation deps.kotlin.coroutines_core
    implementation deps.kotlin.coroutines_android
    implementation deps.kotlin.kotlin_jre
    implementation deps.android.fragment_ktx
    implementation deps.firebase.analytics

    testImplementation deps.unitTest.coroutine_test
    testImplementation deps.unitTest.android_arch_core
    testImplementation deps.unitTest.junit
    testRuntimeOnly deps.unitTest.jupiter_engine
    testRuntimeOnly deps.unitTest.vintage_engine
    testImplementation deps.unitTest.mockk
    testImplementation deps.unitTest.kotlin_junit

    androidTestImplementation deps.instrumentationTest.espressoCore
    androidTestImplementation deps.instrumentationTest.junit

    androidTestImplementation deps.instrumentationTest.runner
    androidTestImplementation deps.instrumentationTest.rules
    androidTestImplementation deps.instrumentationTest.espressoContrib
    androidTestImplementation deps.instrumentationTest.espressoIntents
    androidTestImplementation deps.instrumentationTest.espressoIdlingConcurrent
    androidTestImplementation deps.instrumentationTest.core
}

junitJacoco {
    jacocoVersion = '0.8.2'
    ignoreProjects = []
    excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/*$$*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
            '**/*$inlined$*.*' // Kotlin specific, Jacoco can not handle several "$" in class name.
    ]
    includeNoLocationClasses = false
    includeInstrumentationCoverageInMergedReport = true
}